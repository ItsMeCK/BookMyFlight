<!-- This JS code should be in bookings.js. Bus because of one loading issue kept in view -->
<script>
  var firstSeatLabel = 1;

  $(document).ready(function() {
    var $cart = $('#selected-seats'),
      $counter = $('#counter'),
      $total = $('#total'),
      sc = $('#seat-map').seatCharts({
      map: $('#flightmap').data('flightmap'),
      seats: {
        f: {
          price   : 100,
          classes : 'first-class', //your custom CSS class
          category: 'First Class'
        },
        e: {
          price   : 40,
          classes : 'economy-class', //your custom CSS class
          category: 'Economy Class'
        },
        b: {
          price   : 40,
          classes : 'business-class', //your custom CSS class
          category: 'Business Class'
        }          
      
      },
      naming : {
        top : false,
        getLabel : function (character, row, column) {
          return firstSeatLabel++;
        },
      },
      legend : {
        node : $('#legend'),
          items : [
          [ 'f', 'available',   'First Class' ],
          [ 'e', 'available',   'Economy Class'],
          [ 'b', 'available',   'Business Class'],
          [ 'f', 'unavailable', 'Already Booked']
          ]         
      },
      click: function () {
        if (this.status() == 'available') {
          //let's create a new <li> which we'll add to the cart items
          $('<li>'+this.data().category+' Seat # '+this.settings.label+': <b>$'+this.data().price+'</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
            .attr('id', 'cart-item-'+this.settings.id)
            .data('seatId', this.settings.id)
            .appendTo($cart);
          
          /*
           * Lets update the counter and total
           *
           * .find function will not find the current seat, because it will change its stauts only after return
           * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
           */
          if ($counter.text(sc.find('selected')) != 'undefined') {
            $counter.text(sc.find('selected').length+1);  
          };
          
          $total.text(recalculateTotal(sc)+this.data().price);
          
          return 'selected';
        } else if (this.status() == 'selected') {
          //update the counter

          if ($counter.text(sc.find('selected')) != 'undefined') {
            $counter.text(sc.find('selected').length-1);
          };
          $counter.text(sc.find('selected').length-1);
          //and total
          $total.text(recalculateTotal(sc)-this.data().price);
        
          //remove the item from our cart
          $('#cart-item-'+this.settings.id).remove();
        
          //seat has been vacated
          return 'available';
        } else if (this.status() == 'unavailable') {
          //seat has been already booked
          return 'unavailable';
        } else {
          return this.style();
        }
      }
    });

    //this will handle "[cancel]" link clicks
    $('#selected-seats').on('click', '.cancel-cart-item', function () {
      //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
      sc.get($(this).parents('li:first').data('seatId')).click();
      sc.get($(this).parents('li:first').data('seatId')).status('available');
    });

    $('.checkout-button').on('click', function () {
      selected = []
      $('#selected-seats li').each(function(i)
      {
         selected.push($(this).attr('id').split('-').pop());
      });
            
      if (selected != undefined && selected != null) {
          window.location = '/bookings/allocate_seat?selected=' + selected + '&pnr=' + $('#pnr').data('pnr') };
         
    });

    //let's pretend some seats have already been booked
    sc.get($('#flightallocated').data('flightallocated')).status('unavailable');
    seats = ['f', 'b', 'e'];
    seats.splice(seats.indexOf($('#pnr').data('pnr')[0].toLowerCase()),1);
    console.log(seats);

    jQuery.each( seats, function( i, val ) {
      sc.find(val + '.available').status('unavailable');
    });
    

});

function recalculateTotal(sc) {
  var total = 0;

  //basically find every selected seat and sum its price
  sc.find('selected').each(function () {
    total += this.data().price;
  });
  
  return total;
}

</script>

<%= content_tag "div", id: "flightmap", data: {flightmap: @flight_map} do %>
<% end %>
<%= content_tag "div", id: "flightallocated", data: {flightallocated: @flightallocated} do %>
<% end %>
<%= content_tag "div", id: "pnr", data: {pnr: @pnr} do %>
<% end %>
<div class="wrapper">
  <div class="container">
    <div id="seat-map">
      <div class="front-indicator">Front</div>
      
    </div>
    <div class="booking-details">
      <h2>Booking Details</h2>
      
      <h3> Selected Seats (<span id="counter">0</span>):</h3>
      <ul id="selected-seats"></ul>
      
      Total: <b>$<span id="total">0</span></b>
      
      <button class="checkout-button">Checkout &raquo;</button>
      
      <div id="legend"></div>
    </div>
  </div>
</div>